{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Authors Heaven",
    "description": "usersors Heaven Appi Documentation",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "contact": {
      "Author": "Savage Ranges"
    }
  },
  "host": "savage-rangers-ah-staging.herokuapp.com",
  "basePath": "/api",
  "schemes": ["https", "http"],
  "paths": {
    "/users/signup": {
      "post": {
        "tags": ["Users"],
        "summary": "Sign up new user",
        "description": "",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Register new user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/signup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Invalid entries"
          },
          "default": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "login existing user",
        "description": "",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "login existing user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/signup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User loged in correctly"
          },
          "400": {
            "description": "Invalid entries"
          },
          "401": {
            "description": "Invalid entries"
          },
          "default": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/users/facebook": {
      "get": {
        "tags": ["Users"],
        "summary": ["Register/login facebook users"],
        "description": [
          "Register/login a facebook user and fetch the user profile"
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "User successfully authenticated"
          },
          "201": {
            "description": "Account Successfully created"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/google": {
      "get": {
        "tags": ["Users"],
        "summary": ["Register/login google users "],
        "description": [
          "Register/login a google user and fetch the user profile"
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "User successfully authenticated"
          },
          "201": {
            "description": "Account Successfully created"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/twiter": {
      "get": {
        "tags": ["Users"],
        "summary": ["Register/login twitter users"],
        "description": [
          "Register/login a twitter user and fetch the user profile"
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "User successfully authenticated"
          },
          "201": {
            "description": "Account Successfully created"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/password-reset": {
      "post": {
        "tags": ["Users"],
        "summary": "Reset the password of the user via email",
        "description": "",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "login existing user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/resetPassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email sent successfully"
          },
          "400": {
            "description": "Invalid entries"
          },
          "default": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/password-reset/{token}": {
      "get": {
        "tags": ["Users"],
        "summary": "check the link provided via email to a user for password reset",
        "description": "",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "description": "login existing user",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Valid link provided"
          },
          "400": {
            "description": "Invalid link or server error"
          },
          "default": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/articles/{slug}/rating": {
      "post": {
        "tags": ["articles"],
        "summary": "Rating a specific article based on its slug",
        "description": "Rating",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "user token to verify",
            "required": true
          },
          {
            "in": "path",
            "name": "slug",
            "description": "slug to be used in rating an article",
            "required": true
          },
          {
            "in": "body",
            "name": "rating",
            "description": "update all of the body or any property among them",
            "required": true
          }
        ],
        "response": {
          "201": {
            "description": "Rating for ${slug} submitted successfully"
          },
          "400": {
            "description": "Sorry, you can not update this article twice with the same rating number, please update it"
          },
          "403": {
            "description": "Forbiden access"
          }
        }
      }
    },
    "/password-reset/update/{email}": {
      "post": {
        "tags": ["Users"],
        "summary": "update the password of the user after verification of the reset password link",
        "description": "",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "description": "login existing user",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "login existing user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updatePassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password updated successfully"
          },
          "400": {
            "description": "invalid email provided"
          },
          "404": {
            "description": "Unknown email provided"
          },
          "default": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/users/signout": {
      "get": {
        "tags": ["auth"],
        "summary": "signs out the logged in user",
        "description": "drop the token",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "token to be dropped",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "You are signed out"
          },
          "401": {
            "description": "You are unauthorized, Token is no longer valid"
          },
          "403": {
            "description": "Forbiden access"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/articles": {
      "post": {
        "tags": ["Articles"],
        "summary": "Create article",
        "description": "create new article",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "user token to verify",
            "required": true
          },
          {
            "in": "path",
            "name": "slug",
            "description": "articles URL",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "field required to create article",
            "required": true
          }
        ],
        "get": {
          "tags": ["Profils"],
          "summary": "get the current user's profile",
          "description": "",
          "produces": ["application/json"],
          "consumes": ["application/json"],
          "parameters": [
            {
              "in": "headers",
              "name": "Authorization",
              "description": "adding the token",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Profile exists"
            },
            "401": {
              "description": "Authentication failed"
            },
            "default": {
              "description": "Something went wrong"
            }
          }
        },
        "post": {
          "tags": ["Profils"],
          "summary": "update the user's profile",
          "description": "",
          "produces": ["application/json"],
          "consumes": ["application/json"],
          "parameters": [
            {
              "in": "headers",
              "name": "Authorization",
              "description": "adding the token",
              "required": true
            },
            {
              "in": "body",
              "name": "body",
              "description": "users information",
              "required": true,
              "schema": {
                "$ref": "#/definitions/profile"
              }
            }
          ],
          "response": {
            "201": {
              "description": "Article created succesfully"
            },
            "404": {
              "description": "Not found"
            },
            "403": {
              "description": "Forbiden access"
            },
            "401": {
              "description": "Forbiden access"
            }
          }
        }
      }
    },
    "/articles/{slug}": {
      "patch": {
        "tags": ["Articles"],
        "summary": "Update the article based on its current s-l-u-g",
        "description": "update article by slug",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "user token to verify",
            "required": true
          },
          {
            "in": "path",
            "name": "slug",
            "description": "slug to be used in updating the article",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "update all of the body or any property among them",
            "required": true
          }
        ],
        "response": {
          "200": {
            "description": "Your Article is up-to-date now, Thanks"
          },
          "404": {
            "description": "Article with this { slug } is not found, Thanks"
          },
          "403": {
            "description": "Forbiden access"
          },
          "401": {
            "description": "Please you must be the owner of this Article in order to modify it, Thanks"
          }
        }
      }
    },
    "/articles/": {
      "get": {
        "tags": ["Articles"],
        "summary": "Get a list of all articles",
        "description": "",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return a list of articles"
          },
          "404": {
            "description": "There are no articles at the moment, Please try again later"
          },
          "default": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "articles/{slug}": {
      "get": {
        "tags": ["Articles"],
        "summary": "Get a single articles",
        "description": "",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return a single articles"
          },
          "404": {
            "description": "Not found"
          },
          "default": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/profiles/:username": {
      "get": {
        "tags": ["Profils"],
        "summary": "get another user's profile",
        "description": "",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "headers",
            "name": "Authorization",
            "description": "adding the token",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Profile exists"
          },
          "401": {
            "description": "Authentication failed"
          },
          "404": {
            "description": "User not found"
          },
          "default": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/articles/{slug}/ratings/statistics": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all the ratings of an article",
        "description": "",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "description": "login existing user",
            "required": true
          }
        ]
      }
    },
    "/api/authors": {
      "get": {
        "tags": ["Authors"],
        "summary": "Get all Authors",
        "description": "",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "responses": {
          "200": {
            "description": "Authors"
          },
          "401": {
            "description": "Authentication failed"
          },
          "default": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "externalDocs": {
      "description": "Find out more about Swagger",
      "url": "http://swagger.io"
    },
    "definitions": {
      "signup": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "/users/verifyEmail": {
        "get": {
          "tags": ["Users"],
          "summary": "Verify user's email",
          "description": "",
          "produces": ["application/json"],
          "consumes": ["application/json"],
          "parameters": [
            {
              "in": "path",
              "name": "token",
              "description": "",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Your email is successfully verified"
            },
            "400": {
              "description": "The link provided is  corrupt, please request a new one or try to click it again"
            },
            "404": {
              "description": "User doesn't exist."
            },
            "default": {
              "description": "Something went wrong"
            }
          }
        }
      },
      "/articles/:slug": {
        "delete": {
          "tags": ["Authors"],
          "summary": "allow Authors to delete their own article",
          "description": "",
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "path",
              "name": "token",
              "description": "Delete article",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "article deleted successfully"
            },
            "401": {
              "description": "Please you must be the owner of this Article in order to modify it, Thanks"
            },
            "default": {
              "description": "Something went wrong"
            }
          }
        }
      },
      "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
      },
      "definitions": {
        "signup": {
          "type": "object",
          "properties": {
            "username": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "password": {
              "type": "string"
            }
          }
        },
        "resetPassword": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string"
            }
          }
        },
        "updatePassword": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string"
            }
          }
        },
        "article": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "body": {
              "type": "string"
            },
            "tagList": {
              "type": "string"
            },
            "category": {
              "type": "string"
            }
          }
        }
      },
      "profile": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "bio": {
            "type": "string"
          },
          "profileImage": {
            "type": "file"
          },
          "facebook": {
            "type": "string"
          },
          "twitter": {
            "type": "string"
          }
        }
      }
    }
  }
}
